{"version":3,"sources":["components/shared/NumberInput.js","components/blend/BlendForm.js","components/blend/Products.js","components/Blend.js","actions/totals.js","containers/Blend.js","components/products/Product.js","components/Products.js","actions/products.js","containers/Products.js","reducers/products.js","actions/product_totals.js","reducers/product_totals.js","reducers/totals.js","reducers/index.js","sagas/calculate_total_product.js","sagas/remove_product_totals.js","sagas/index.js","store/index.js","App.js","serviceWorker.js","index.js"],"names":["NumberInput","_ref","id","name","value","onChange","number","_","toNumber","isValid","isFinite","react_default","a","createElement","Input","invalid","type","className","defaultProps","undefined","BlendForm","updateNitrogen","event","nitrogen","target","_this","updateTotals","updatePhosphorous","phosphorous","updatePotassium","potassium","updateSulfur","sulfur","object","props","setTotals","Object","objectSpread","totals","this","Form","FormGroup","row","Label","for","sm","Col","shared_NumberInput","Component","Products","Table","colSpan","product_totals","map","product","key","amount","toFixed","Blend","Jumbotron","blend_BlendForm","blend_Products","products","SET_TOTALS","payload","connect","state","dispatch","bindActionCreators","Product","updateName","updateProduct","index","removeProduct","deleteProduct","autoFocus","toString","Button","color","onClick","createProduct","length","size","products_Product","block","CREATE_PRODUCT","UPDATE_PRODUCT","DELETE_PRODUCT","uniqueId","initialState","getProducts","productNumber","getNitrogenProduct","find","p","getPhosphorousProduct","getPotassiumProduct","getSulfurProduct","SET_PRODUCT_TOTAL","REMOVE_PRODUCT_TOTAL","units","getTotalsAsNumbers","getTotals","combineReducers","arguments","action","concat","toConsumableArray","findIndex","slice","getProductForRemainingTotal","calculateTotalProductUsage","calculate","chemicals","productTotalsForAmount","originalProduct","chemical","remainingChemicals","filter","c","defineProperty","chemicalName","chemicalUsage","originalUsage","subtractProductFromTotal","total","productTotal","originalTotal","regenerator_default","wrap","_context","prev","next","abrupt","call","sent","put","stop","_marked","remainingTotals","sulfurProduct","potassiumProduct","phosphorousProduct","nitrogenProduct","_context2","select","_marked2","_context3","debounce","_marked3","removeProductTotal","remove","remove_product_totals_marked","take","remove_product_totals_marked2","root","all","fork","sagas_marked","sagaMiddleware","createSagaMiddleware","composeEnhancers","composeWithDevTools","store","createStore","rootReducer","applyMiddleware","run","rootSaga","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","openProducts","setState","tab","openResults","activeTab","es","Navbar","dark","NavbarBrand","href","Container","Nav","tabs","fill","NavItem","NavLink","TabContent","TabPane","tabId","Row","containers_Products","containers_Blend","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c33b1141.chunk.js","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Input } from 'reactstrap';\n\nconst NumberInput = ({ id, name, value, onChange }) => {\n  const number = _.toNumber(value);\n  const isValid = _.isFinite(number);\n  return (\n    <Input\n      id={id}\n      name={name}\n      invalid={!isValid}\n      type=\"number\"\n      value={value}\n      onChange={onChange}\n      className=\"text-right\"\n    />\n  );\n}\n\nNumberInput.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n}\n\nNumberInput.defaultProps = {\n  id: undefined,\n  name: undefined,\n}\n\nexport default NumberInput;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Col, Form, FormGroup, Label } from 'reactstrap';\n\nimport NumberInput from '../shared/NumberInput';\n\nclass BlendForm extends Component {\n  updateNitrogen = (event) => {\n    const nitrogen = event.target.value;\n    this.updateTotals({ nitrogen });\n  }\n\n  updatePhosphorous = (event) => {\n    const phosphorous = event.target.value;\n    this.updateTotals({ phosphorous });\n  }\n\n  updatePotassium = (event) => {\n    const potassium = event.target.value;\n    this.updateTotals({ potassium });\n  }\n\n  updateSulfur = (event) => {\n    const sulfur = event.target.value;\n    this.updateTotals({ sulfur });\n  }\n\n  updateTotals = (object) => {\n    this.props.setTotals({\n      ...this.props.totals,\n      ...object,\n    });\n  }\n\n  render() {\n    const { totals } = this.props;\n    return (\n      <Form>\n        <FormGroup row>\n          <Label className=\"text-right\" for=\"nitrogen\" sm={6}>Nitogen</Label>\n          <Col sm={2} className=\"mr-auto\">\n            <NumberInput name=\"nitrogen\" id=\"nitrogen\" value={totals.nitrogen} onChange={this.updateNitrogen} />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label className=\"text-right\" for=\"phosphorous\" sm={6}>Phosphorous</Label>\n          <Col sm={2} className=\"mr-auto\">\n            <NumberInput name=\"phosphorous\" id=\"phosphorous\" value={totals.phosphorous} onChange={this.updatePhosphorous} />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label className=\"text-right\" for=\"potassium\" sm={6}>Potassium</Label>\n          <Col sm={2} className=\"mr-auto\">\n            <NumberInput name=\"potassium\" id=\"potassium\" value={totals.potassium} onChange={this.updatePotassium} />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label className=\"text-right\" for=\"sulfur\" sm={6}>Sulfur</Label>\n          <Col sm={2} className=\"mr-auto\">\n            <NumberInput name=\"sulfur\" id=\"sulfur\" value={totals.sulfur} onChange={this.updateSulfur} />\n          </Col>\n        </FormGroup>\n      </Form>\n    )\n  }\n}\n\nBlendForm.propTypes = {\n  totals: PropTypes.object.isRequired,\n  setTotals: PropTypes.func.isRequired,\n}\n\nexport default BlendForm;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Table } from 'reactstrap';\n\nclass Products extends Component {\n\n  render() {\n    return (\n      <Table className=\"mt-5\">\n        <thead>\n          <tr>\n            <th colSpan=\"2\">Name</th>\n            <th colSpan=\"1\">Amount (units)</th>\n            <th colSpan=\"1\">Nitrogen (units)</th>\n            <th colSpan=\"1\">Phosphorous (units)</th>\n            <th colSpan=\"1\">Potassium (units)</th>\n            <th colSpan=\"1\">Sulfur (units)</th>\n          </tr>\n        </thead>\n        <tbody>\n          {this.props.product_totals.map(product => (\n            <tr key={product.id}>\n              <td colSpan=\"2\">{product.name}</td>\n              <td colSpan=\"1\">{product.amount.toFixed(2)}</td>\n              <td colSpan=\"1\">{product.nitrogen.toFixed(2)}</td>\n              <td colSpan=\"1\">{product.phosphorous.toFixed(2)}</td>\n              <td colSpan=\"1\">{product.potassium.toFixed(2)}</td>\n              <td colSpan=\"1\">{product.sulfur.toFixed(2)}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    )\n  }\n}\n\nProducts.propTypes = {\n  products: PropTypes.arrayOf(PropTypes.object).isRequired,\n  product_totals: PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n\nexport default Products;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Jumbotron } from 'reactstrap';\n\nimport BlendForm from './blend/BlendForm';\nimport Products from './blend/Products';\n\nclass Blend extends Component {\n  render() {\n    return (\n      <div>\n        <Jumbotron>\n          <h1 className=\"mb-5 text-center\">Add your desired amounts (in <code>lbs</code> or <code>kg</code>)</h1>\n          <BlendForm totals={this.props.totals} setTotals={this.props.setTotals} />\n        </Jumbotron>\n        <Products product_totals={this.props.product_totals} products={this.props.products} />\n      </div>\n    )\n  }\n}\n\nBlend.propTypes = {\n  totals: PropTypes.object.isRequired,\n  product_totals: PropTypes.arrayOf(PropTypes.object),\n  setTotals: PropTypes.func.isRequired,\n}\n\nexport default Blend;\n","export const SET_TOTALS = 'SET_TOTALS';\n\nexport function setTotals(totals ) {\n  return { type: SET_TOTALS, payload: totals };\n}\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Blend from '../components/Blend';\n\nimport { setTotals } from '../actions/totals';\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    setTotals,\n  }, dispatch);\n}\n\nfunction mapStateToProps(state) {\n  return {\n    products: state.products,\n    product_totals: state.product_totals,\n    totals: state.totals,\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Blend);\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Button, Input } from 'reactstrap';\n\nimport NumberInput from '../shared/NumberInput';\n\nclass Product extends Component {\n  updateName = (event) => {\n    const name = event.target.value;\n    this.updateProduct({ name });\n  }\n\n  updateNitrogen = (event) => {\n    const nitrogen = event.target.value;\n    this.updateProduct({ nitrogen });\n  }\n\n  updatePhosphorous = (event) => {\n    const phosphorous = event.target.value;\n    this.updateProduct({ phosphorous });\n  }\n\n  updatePotassium = (event) => {\n    const potassium = event.target.value;\n    this.updateProduct({ potassium });\n  }\n\n  updateSulfur = (event) => {\n    const sulfur = event.target.value;\n    this.updateProduct({ sulfur });\n  }\n\n  updateProduct = (object) => {\n    this.props.updateProduct({\n      ...this.props.product,\n      ...object,\n    }, this.props.index);\n  }\n\n  removeProduct = () => {\n    this.props.deleteProduct(this.props.product);\n  }\n\n  render() {\n    const { product } = this.props;\n    return (\n      <tr>\n        <td colSpan=\"2\">\n          <Input\n            autoFocus\n            type=\"text\"\n            value={product.name}\n            onChange={this.updateName}\n          />\n        </td>\n        <td>\n          <NumberInput\n            value={product.nitrogen}\n            onChange={this.updateNitrogen}\n          />\n        </td>\n        <td>\n          <NumberInput\n            value={product.phosphorous}\n            onChange={this.updatePhosphorous}\n          />\n        </td>\n        <td>\n          <NumberInput\n            value={product.potassium}\n            onChange={this.updatePotassium}\n          />\n          </td>\n        <td>\n          <NumberInput\n            value={product.sulfur.toString()}\n            onChange={this.updateSulfur}\n          />\n        </td>\n        <td>\n          <Button color=\"danger\" onClick={this.removeProduct}>\n            <i className=\"fas fa-trash\"></i>\n          </Button>\n        </td>\n      </tr>\n    )\n  }\n}\n\nProduct.propTypes = {\n  product: PropTypes.object.isRequired,\n  updateProduct: PropTypes.func.isRequired,\n  deleteProduct: PropTypes.func.isRequired,\n}\n\nexport default Product;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Button, Jumbotron, Table } from 'reactstrap';\n\nimport Product from './products/Product';\n\nconst Products = ({ createProduct, updateProduct, deleteProduct, products }) => {\n  if (products.length === 0) {\n    return (\n      <Jumbotron className=\"vh-50 text-center\">\n        <h1>You haven't added any products for your blend yet</h1>\n        <Button className=\"mt-3\" size=\"lg\" color=\"primary\" onClick={createProduct}>Add Product</Button>\n      </Jumbotron>\n    )\n  }\n\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <th colSpan=\"2\">Name</th>\n          <th colSpan=\"1\">Nitrogen (%)</th>\n          <th colSpan=\"1\">Phosphorous (%)</th>\n          <th colSpan=\"1\">Potassium (%)</th>\n          <th colSpan=\"1\">Sulfur (%)</th>\n          <th colSpan=\"1\" />\n        </tr>\n      </thead>\n      <tbody>\n        {products.map((product, index) => (\n          <Product key={index} index={index} product={product} updateProduct={updateProduct} deleteProduct={deleteProduct} />\n        ))}\n        <tr>\n          <td colSpan=\"6\">\n            <Button block color=\"primary\" onClick={createProduct}>Add Product</Button>\n          </td>\n        </tr>\n      </tbody>\n    </Table>\n  );\n};\n\nProducts.propTypes = {\n  products: PropTypes.arrayOf(PropTypes.object).isRequired,\n  createProduct: PropTypes.func.isRequired,\n  updateProduct: PropTypes.func.isRequired,\n  deleteProduct: PropTypes.func.isRequired,\n}\n\nexport default Products;\n","import _ from 'lodash';\n\nexport const CREATE_PRODUCT = 'CREATE_PRODUCT';\nexport const UPDATE_PRODUCT = 'UPDATE_PRODUCT';\nexport const DELETE_PRODUCT = 'DELETE_PRODUCT';\n\nexport function createProduct() {\n  return {\n    type: CREATE_PRODUCT,\n    payload: {\n      id: _.uniqueId(),\n      name: '',\n      nitrogen: '0',\n      phosphorous: '0',\n      potassium: '0',\n      sulfur: '0',\n    }\n  };\n}\n\nexport function deleteProduct(product) {\n  return { type: DELETE_PRODUCT, payload: product };\n}\n\nexport function updateProduct(product) {\n  return { type: UPDATE_PRODUCT, payload: product };\n}\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Products from '../components/Products';\n\nimport {\n  createProduct,\n  updateProduct,\n  deleteProduct,\n} from '../actions/products';\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    createProduct,\n    updateProduct,\n    deleteProduct,\n  }, dispatch);\n}\n\nfunction mapStateToProps(state) {\n  return {\n    products: state.products,\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);\n","import _ from 'lodash';\nimport {\n  CREATE_PRODUCT,\n  UPDATE_PRODUCT,\n  DELETE_PRODUCT,\n} from '../actions/products';\n\nconst initialState = [];\n\nexport function getProducts(state) {\n  return state.products;\n}\n\nexport function productNumber(product) {\n  return {\n    ...product,\n    nitrogen: _.toNumber(product.nitrogen),\n    phosphorous: _.toNumber(product.phosphorous),\n    potassium: _.toNumber(product.potassium),\n    sulfur: _.toNumber(product.sulfur),\n  }\n}\n\nexport function getNitrogenProduct(state) {\n  const product = getProducts(state).find(p => _.toNumber(p.nitrogen) > 0 && _.toNumber(p.phosphorous) === 0 && _.toNumber(p.potassium) === 0 && _.toNumber(p.sulfur) === 0);\n  if (product) {\n    return productNumber(product);\n  }\n  return null;\n}\n\nexport function getPhosphorousProduct(state) {\n  const product = getProducts(state).find(p => _.toNumber(p.phosphorous) > 0 && _.toNumber(p.potassium) === 0 && _.toNumber(p.sulfur) === 0);\n  if (product) {\n    return productNumber(product);\n  }\n  return null;\n}\n\nexport function getPotassiumProduct(state) {\n  const product = getProducts(state).find(p => _.toNumber(p.potassium) > 0 && _.toNumber(p.sulfur) === 0);\n  if (product) {\n    return productNumber(product);\n  }\n  return null;\n}\n\nexport function getSulfurProduct(state) {\n  const product = getProducts(state).find(p => _.toNumber(p.sulfur) > 0);\n  if (product) {\n    return productNumber(product);\n  }\n  return null;\n}\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case CREATE_PRODUCT:\n      return [\n        ...state,\n        action.payload,\n      ];\n    case UPDATE_PRODUCT: {\n      const index = state.findIndex(p => p.id === action.payload.id);\n      return [\n        ...state.slice(0, index),\n        action.payload,\n        ...state.slice(index + 1),\n      ];\n    }\n    case DELETE_PRODUCT: {\n      const index = state.findIndex(p => p.id === action.payload.id);\n      return [\n        ...state.slice(0, index),\n        ...state.slice(index + 1),\n      ];\n    }\n    default:\n      return state;\n  }\n}\n","export const SET_PRODUCT_TOTAL = 'SET_PRODUCT_TOTAL';\nexport const REMOVE_PRODUCT_TOTAL = 'REMOVE_PRODUCT_TOTAL';\n","import {\n  SET_PRODUCT_TOTAL,\n  REMOVE_PRODUCT_TOTAL,\n} from '../actions/product_totals';\n\nconst initialState = []\n\nexport function getProductTotals(state) {\n  return state.product_totals;\n}\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_PRODUCT_TOTAL: {\n      const index = state.findIndex(p => p.id === action.payload.id);\n      return [\n        ...state.slice(0, index),\n        action.payload,\n        ...state.slice(index + 1),\n      ];\n    }\n    case REMOVE_PRODUCT_TOTAL: {\n      const index = state.findIndex(p => p.id === action.payload.id);\n      return [\n        ...state.slice(0, index),\n        ...state.slice(index + 1),\n      ];\n    }\n    default:\n      return state;\n  }\n}\n","import _ from 'lodash';\nimport {\n  SET_TOTALS,\n} from '../actions/totals';\n\nconst initialState = {\n  units: 'lbs',\n  nitrogen: '0',\n  phosphorous: '0',\n  potassium: '0',\n  sulfur: '0',\n}\n\nexport function getTotals(state) {\n  return state.totals;\n}\n\nexport function getTotalsAsNumbers(state) {\n  const totals = getTotals(state);\n  return {\n    nitrogen: _.toNumber(totals.nitrogen),\n    phosphorous: _.toNumber(totals.phosphorous),\n    potassium: _.toNumber(totals.potassium),\n    sulfur: _.toNumber(totals.sulfur),\n  };\n}\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_TOTALS:\n      return {\n        ...state,\n        ...action.payload,\n      }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\n\nimport products from './products';\nimport productTotals from './product_totals';\nimport totals from './totals';\n\nexport default combineReducers({\n  products,\n  product_totals: productTotals,\n  totals,\n});\n","import { call, debounce, put, select } from 'redux-saga/effects';\n\nimport { UPDATE_PRODUCT } from '../actions/products';\nimport { SET_PRODUCT_TOTAL, REMOVE_PRODUCT_TOTAL } from '../actions/product_totals';\nimport { SET_TOTALS } from '../actions/totals';\nimport { getNitrogenProduct, getPhosphorousProduct, getPotassiumProduct, getSulfurProduct } from '../reducers/products';\nimport { getTotalsAsNumbers } from '../reducers/totals';\n\nconst chemicals = ['nitrogen', 'potassium', 'phosphorous', 'sulfur'];\n\nfunction productTotalsForAmount(originalProduct, amount, chemical) {\n  const remainingChemicals = chemicals.filter(c => c !== chemical);\n  const product = {\n    id: originalProduct.id,\n    name: originalProduct.name,\n    amount,\n    [chemical]: amount,\n  };\n  for (let index = 0; index < remainingChemicals.length; index += 1) {\n    const chemicalName = remainingChemicals[index];\n    const chemicalUsage = originalProduct[chemicalName] * amount;\n    const originalUsage = originalProduct[chemical];\n    product[chemicalName] = originalUsage > 0 ? chemicalUsage / originalUsage : 0;\n  }\n  return product;\n}\n\nfunction subtractProductFromTotal(total, productTotal) {\n  return {\n    nitrogen: total.nitrogen - productTotal.nitrogen,\n    phosphorous: total.phosphorous - productTotal.phosphorous,\n    potassium: total.potassium - productTotal.potassium,\n    sulfur: total.sulfur - productTotal.sulfur,\n  }\n}\n\nfunction* getProductForRemainingTotal(originalTotal, product, chemical) {\n  if (!product) {\n    return originalTotal;\n  }\n\n  const amount = product[chemical] > 0 ? originalTotal[chemical] / (product[chemical] / 100) : 0;\n  const productTotal = yield call(productTotalsForAmount, product, amount, chemical);\n  yield put({ type: SET_PRODUCT_TOTAL, payload: productTotal });\n\n  const total = yield call(subtractProductFromTotal, originalTotal, productTotal);\n  return total;\n}\n\nfunction* calculateTotalProductUsage() {\n  let remainingTotals = yield select(getTotalsAsNumbers);\n\n  const sulfurProduct = yield select(getSulfurProduct);\n  remainingTotals = yield call(getProductForRemainingTotal, remainingTotals, sulfurProduct, 'sulfur');\n\n  const potassiumProduct = yield select(getPotassiumProduct);\n  remainingTotals = yield call(getProductForRemainingTotal, remainingTotals, potassiumProduct, 'potassium');\n\n  const phosphorousProduct = yield select(getPhosphorousProduct);\n  remainingTotals = yield call(getProductForRemainingTotal, remainingTotals, phosphorousProduct, 'phosphorous');\n\n  const nitrogenProduct = yield select(getNitrogenProduct);\n  yield call(getProductForRemainingTotal, remainingTotals, nitrogenProduct, 'nitrogen');\n}\n\nexport default function* calculate() {\n  yield debounce(500, [UPDATE_PRODUCT, SET_TOTALS, REMOVE_PRODUCT_TOTAL], calculateTotalProductUsage);\n}\n","import { call, put, take } from 'redux-saga/effects';\n\nimport { DELETE_PRODUCT } from '../actions/products';\nimport { REMOVE_PRODUCT_TOTAL } from '../actions/product_totals';\n\nfunction* removeProductTotal(product) {\n  yield put({ type: REMOVE_PRODUCT_TOTAL, payload: product });\n}\n\nexport default function* remove() {\n  while (true) {\n    const action = yield take(DELETE_PRODUCT);\n    yield call(removeProductTotal, action.payload);\n  }\n}\n","import { all, fork } from 'redux-saga/effects';\n\nimport calculate from './calculate_total_product';\nimport remove from './remove_product_totals';\n\nexport default function* root() {\n  yield all([\n    fork(calculate),\n    fork(remove),\n  ])\n}\n","import { applyMiddleware, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport rootReducer from '../reducers';\nimport rootSaga from '../sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composeEnhancers = composeWithDevTools({});\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(\n    sagaMiddleware\n  )),\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport {\n  Container,\n  Row,\n  Col,\n  Navbar,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  TabContent,\n  TabPane,\n} from 'reactstrap';\n\nimport Blend from './containers/Blend';\nimport Products from './containers/Products';\n\nimport store from './store';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tab: 0,\n    }\n  }\n\n  openProducts = () => {\n    this.setState({ tab: 0 });\n  }\n\n  openResults = () => {\n    this.setState({ tab: 1 });\n  }\n\n  render() {\n    const activeTab = this.state.tab === 0;\n    return (\n      <Provider store={store}>\n        <Navbar color=\"dark\" dark>\n          <NavbarBrand href=\"/\">Blend Calculator</NavbarBrand>\n        </Navbar>\n        <Container className=\"mt-5\">\n          <Nav tabs fill>\n            <NavItem>\n              <NavLink className={activeTab ? 'active' : undefined} onClick={this.openProducts}>\n                Products\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink className={activeTab ? undefined : 'active'} onClick={this.openResults}>\n                Blend\n              </NavLink>\n            </NavItem>\n          </Nav>\n          <TabContent activeTab={this.state.tab} className=\"mt-5\">\n            <TabPane tabId={0}>\n              <Row>\n                <Col>\n                  <Products />\n                </Col>\n              </Row>\n            </TabPane>\n            <TabPane tabId={1}>\n              <Row>\n                <Col>\n                  <Blend />\n                </Col>\n              </Row>\n            </TabPane>\n          </TabContent>\n        </Container>\n      </Provider>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}