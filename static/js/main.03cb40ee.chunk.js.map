{"version":3,"sources":["components/blend/BlendForm.js","components/blend/Products.js","components/Blend.js","actions/totals.js","containers/Blend.js","components/products/Product.js","components/Products.js","actions/products.js","containers/Products.js","reducers/products.js","reducers/totals.js","reducers/index.js","store/index.js","App.js","serviceWorker.js","index.js"],"names":["BlendForm","updateNitrogen","event","nitrogen","_","toNumber","target","value","_this","updateTotals","updatePhosphorous","phosphorous","updatePotassium","potassium","updateSulfur","sulfur","object","props","setTotals","Object","objectSpread","totals","this","react_default","a","createElement","Form","FormGroup","row","Label","for","sm","Col","Input","type","name","id","onChange","Component","Products","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","processProducts","calculateSulphur","calculatePotassium","calculatePhosphorous","calculateNitrogen","nitrogenProducts","products","filter","p","length","product","reverse","sortBy","addProductToState","phosphorousProducts","potassiumProducts","sulfurProducts","pendingProduct","totalNitrogen","state","totalPhosphorous","totalPotassium","totalSulfur","console","log","addNitrogenToStateTotals","addPhosphorousToStateTotals","addPotassiumToStateTotals","addSulfurToStateTotals","updateOrAddProduct","nitrogenToAdd","setState","phosphorousToAdd","potassiumToAdd","sulfurToAdd","index","findIndex","concat","toConsumableArray","slice","prevProps","Table","className","map","key","Blend","blend_BlendForm","blend_Products","SET_TOTALS","SET_PRODUCT_TOTAL","CALCULATE_TOTALS","calculateTotals","payload","connect","dispatch","bindActionCreators","Product","updateName","updateProduct","removeProduct","deleteProduct","colSpan","toString","Button","color","onClick","_ref","createProduct","products_Product","block","CREATE_PRODUCT","UPDATE_PRODUCT","DELETE_PRODUCT","uniqueId","initialState","units","combineReducers","arguments","undefined","action","composeEnhancers","composeWithDevTools","store","createStore","rootReducer","applyMiddleware","App","openProducts","tab","openResults","activeTab","es","Navbar","dark","NavbarBrand","href","Container","Nav","tabs","fill","NavItem","NavLink","TabContent","TabPane","tabId","Row","containers_Products","containers_Blend","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.03cb40ee.chunk.js","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Col, Form, FormGroup, Input, Label } from 'reactstrap';\n\nclass BlendForm extends Component {\n  updateNitrogen = (event) => {\n    const nitrogen = _.toNumber(event.target.value);\n    this.updateTotals({ nitrogen });\n  }\n\n  updatePhosphorous = (event) => {\n    const phosphorous = _.toNumber(event.target.value);\n    this.updateTotals({ phosphorous });\n  }\n\n  updatePotassium = (event) => {\n    const potassium = _.toNumber(event.target.value);\n    this.updateTotals({ potassium });\n  }\n\n  updateSulfur = (event) => {\n    const sulfur = _.toNumber(event.target.value);\n    this.updateTotals({ sulfur });\n  }\n\n  updateTotals = (object) => {\n    this.props.setTotals({\n      ...this.props.totals,\n      ...object,\n    });\n  }\n\n  render() {\n    const { totals } = this.props;\n    return (\n      <Form>\n        <FormGroup row>\n          <Label for=\"nitrogen\" sm={2}>Nitogen</Label>\n          <Col sm={10}>\n            <Input type=\"number\" name=\"nitrogen\" id=\"nitrogen\" value={totals.nitrogen} onChange={this.updateNitrogen} />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label for=\"phosphorous\" sm={2}>Phosphorous</Label>\n          <Col sm={10}>\n            <Input type=\"number\" name=\"phosphorous\" id=\"phosphorous\" value={totals.phosphorous} onChange={this.updatePhosphorous} />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label for=\"potassium\" sm={2}>Potassium</Label>\n          <Col sm={10}>\n            <Input type=\"number\" name=\"potassium\" id=\"potassium\" value={totals.potassium} onChange={this.updatePotassium} />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label for=\"sulfur\" sm={2}>Sulfur</Label>\n          <Col sm={10}>\n            <Input type=\"number\" name=\"sulfur\" id=\"sulfur\" value={totals.sulfur} onChange={this.updateSulfur} />\n          </Col>\n        </FormGroup>\n      </Form>\n    )\n  }\n}\n\nBlendForm.propTypes = {\n  totals: PropTypes.object.isRequired,\n  setTotals: PropTypes.func.isRequired,\n}\n\nexport default BlendForm;\n","import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Table } from 'reactstrap';\n\nclass Products extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      totals: {\n        nitrogen: 0.00,\n        phosphorous: 0.00,\n        potassium: 0.00,\n        sulfur: 0.00,\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.processProducts();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.totals !== prevProps.totals) {\n      this.processProducts();\n    }\n  }\n\n  processProducts = () => {\n    this.calculateSulphur();\n    this.calculatePotassium();\n    this.calculatePhosphorous();\n    this.calculateNitrogen();\n  }\n\n  calculateNitrogen = () => {\n    const nitrogenProducts = this.props.products.filter(p => p.nitrogen > 0 && p.phosphorous === 0 && p.sulfur === 0 && p.potassium === 0);\n    if (nitrogenProducts.length === 0) {\n      return;\n    }\n    const sortedProducts = _.reverse(_.sortBy(nitrogenProducts, 'nitrogen'));\n    const product = sortedProducts[0];\n    this.addProductToState(product);\n  }\n\n  calculatePhosphorous = () => {\n    const phosphorousProducts = this.props.products.filter(p => p.phosphorous > 0 && p.sulfur === 0 && p.potassium === 0);\n    if (phosphorousProducts.length === 0) {\n      return;\n    }\n    const sortedProducts = _.reverse(_.sortBy(phosphorousProducts, 'phosphorous'));\n    const product = sortedProducts[0];\n    this.addProductToState(product);\n  }\n\n  calculatePotassium = () => {\n    const potassiumProducts = this.props.products.filter(p => p.potassium > 0 && p.sulfur === 0);\n    if (potassiumProducts.length === 0) {\n      return;\n    }\n    const sortedProducts = _.reverse(_.sortBy(potassiumProducts, 'potassium'));\n    const product = sortedProducts[0];\n    this.addProductToState(product);\n  }\n\n  calculateSulphur = () => {\n    const sulfurProducts = this.props.products.filter(p => p.sulfur > 0);\n    if (sulfurProducts.length === 0) {\n      return;\n    }\n    const sortedProducts = _.reverse(_.sortBy(sulfurProducts, 'sulfur'));\n    const product = sortedProducts[0];\n    this.addProductToState(product);\n  }\n\n  addProductToState = (pendingProduct) => {\n    // totals to add\n    const totalNitrogen = this.props.totals.nitrogen - this.state.totals.nitrogen;\n    const totalPhosphorous = this.props.totals.phosphorous - this.state.totals.phosphorous;\n    const totalPotassium = this.props.totals.potassium - this.state.totals.potassium;\n    const totalSulfur = this.props.totals.sulfur - this.state.totals.sulfur;\n\n\n    // amount for product\n    const nitrogen = pendingProduct.nitrogen > 0 ? totalNitrogen / (pendingProduct.nitrogen / 100) : 0;\n    const phosphorous = pendingProduct.phosphorous > 0 ? totalPhosphorous / (pendingProduct.phosphorous / 100) : 0;\n    const potassium = pendingProduct.potassium > 0 ? totalPotassium / (pendingProduct.potassium / 100) : 0;\n    const sulfur = pendingProduct.sulfur > 0 ? totalSulfur / (pendingProduct.sulfur / 100) : 0\n    const product = {\n      ...pendingProduct,\n      nitrogen,\n      phosphorous,\n      potassium,\n      sulfur,\n    }\n    console.log(product);\n    this.addNitrogenToStateTotals(nitrogen);\n    this.addPhosphorousToStateTotals(phosphorous);\n    this.addPotassiumToStateTotals(potassium);\n    this.addSulfurToStateTotals(sulfur);\n    this.updateOrAddProduct(product);\n  }\n\n  addNitrogenToStateTotals = (nitrogenToAdd) => {\n    const nitrogen = this.state.totals.nitrogen + nitrogenToAdd;\n    this.setState({ nitrogen });\n  }\n\n  addPhosphorousToStateTotals = (phosphorousToAdd) => {\n    const phosphorous = this.state.totals.phosphorous + phosphorousToAdd;\n    this.setState({ phosphorous });\n  }\n\n  addPotassiumToStateTotals = (potassiumToAdd) => {\n    const potassium = this.state.totals.potassium + potassiumToAdd;\n    this.setState({ potassium });\n  }\n\n  addSulfurToStateTotals = (sulfurToAdd) => {\n    const sulfur = this.state.totals.sulfur + sulfurToAdd;\n    this.setState({ sulfur });\n  }\n\n  updateOrAddProduct = (product) => {\n    const index = this.state.products.findIndex(p => p.id === product.id);\n    console.log(index);\n    if (index !== -1) {\n      this.setState({\n        products: [\n          ...this.state.products.slice(0, index),\n          product,\n          ...this.state.products.slice(index + 1),\n        ],\n      });\n    } else {\n      this.setState({\n        products: [\n          ...this.state.products,\n          product,\n        ],\n      });\n    }\n  }\n\n  render() {\n    return (\n      <Table className=\"mt-5\">\n        <tbody>\n          {this.state.products.map(product => (\n            <tr key={product.id}>\n              <td>{product.name}</td>\n              <td>{product.nitrogen}</td>\n              <td>{product.phosphorous}</td>\n              <td>{product.potassium}</td>\n              <td>{product.sulfur}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    )\n  }\n}\n\nProducts.propTypes = {\n  products: PropTypes.arrayOf(PropTypes.object).isRequired,\n  totals: PropTypes.object.isRequired,\n}\n\nexport default Products;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nimport BlendForm from './blend/BlendForm';\nimport Products from './blend/Products';\n\nclass Blend extends Component {\n  render() {\n    return (\n      <div>\n        <BlendForm totals={this.props.totals} setTotals={this.props.setTotals} />\n        <Products totals={this.props.totals} products={this.props.products} />\n      </div>\n    )\n  }\n}\n\nBlend.propTypes = {\n  totals: PropTypes.object.isRequired,\n  setTotals: PropTypes.func.isRequired,\n}\n\nexport default Blend;\n","export const SET_TOTALS = 'SET_TOTALS';\nexport const SET_PRODUCT_TOTAL = 'SET_PRODUCT_TOTAL';\n\nexport const CALCULATE_TOTALS = 'CALCULATE_TOTALS';\n\nexport function calculateTotals() {\n  return { type: CALCULATE_TOTALS };\n}\n\nexport function setTotals(totals ) {\n  return { type: SET_TOTALS, payload: totals };\n}\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Blend from '../components/Blend';\n\nimport { calculateTotals, setTotals } from '../actions/totals';\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    calculateTotals,\n    setTotals,\n  }, dispatch);\n}\n\nfunction mapStateToProps(state) {\n  return {\n    products: state.products,\n    totals: state.totals,\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Blend);\n","import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Button, Input } from 'reactstrap';\n\nclass Product extends Component {\n  updateName = (event) => {\n    const name = event.target.value;\n    this.updateProduct({ name });\n  }\n\n  updateNitrogen = (event) => {\n    const nitrogen = _.toNumber(event.target.value);\n    this.updateProduct({ nitrogen });\n  }\n\n  updatePhosphorous = (event) => {\n    const phosphorous = _.toNumber(event.target.value);\n    this.updateProduct({ phosphorous });\n  }\n\n  updatePotassium = (event) => {\n    const potassium = _.toNumber(event.target.value);\n    this.updateProduct({ potassium });\n  }\n\n  updateSulfur = (event) => {\n    const sulfur = _.toNumber(event.target.value);\n    this.updateProduct({ sulfur });\n  }\n\n  updateProduct = (object) => {\n    this.props.updateProduct({\n      ...this.props.product,\n      ...object,\n    }, this.props.index);\n  }\n\n  removeProduct = () => {\n    this.props.deleteProduct(this.props.product);\n  }\n\n  render() {\n    const { product } = this.props;\n    return (\n      <tr>\n        <td colSpan=\"2\">\n          <Input value={product.name} onChange={this.updateName} />\n        </td>\n        <td>\n          <Input value={product.nitrogen.toString()} onChange={this.updateNitrogen} />\n        </td>\n        <td>\n          <Input value={product.phosphorous.toString()} onChange={this.updatePhosphorous} />\n        </td>\n        <td>\n          <Input value={product.potassium.toString()} onChange={this.updatePotassium} />\n          </td>\n        <td>\n          <Input value={product.sulfur.toString()} onChange={this.updateSulfur} />\n        </td>\n        <td>\n          <Button color=\"danger\" onClick={this.removeProduct}>\n            🗑\n          </Button>\n        </td>\n      </tr>\n    )\n  }\n}\n\nProduct.propTypes = {\n  product: PropTypes.object.isRequired,\n  updateProduct: PropTypes.func.isRequired,\n  deleteProduct: PropTypes.func.isRequired,\n}\n\nexport default Product;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Button, Table } from 'reactstrap';\n\nimport Product from './products/Product';\n\nconst Products = ({ createProduct, updateProduct, deleteProduct, products }) => (\n  <Table>\n    <thead>\n      <tr>\n        <th colSpan=\"2\">Name</th>\n        <th colSpan=\"1\">Nitrogen (%)</th>\n        <th colSpan=\"1\">Phosphorous (%)</th>\n        <th colSpan=\"1\">Potassium (%)</th>\n        <th colSpan=\"1\">Sulfur (%)</th>\n        <th colSpan=\"1\" />\n      </tr>\n    </thead>\n    <tbody>\n      {products.map((product, index) => (\n        <Product key={index} index={index} product={product} updateProduct={updateProduct} deleteProduct={deleteProduct} />\n      ))}\n      <tr>\n        <td colSpan=\"6\">\n          <Button block color=\"primary\" onClick={createProduct}>Add Product</Button>\n        </td>\n      </tr>\n    </tbody>\n  </Table>\n);\n\nProducts.propTypes = {\n  products: PropTypes.arrayOf(PropTypes.object).isRequired,\n  createProduct: PropTypes.func.isRequired,\n  updateProduct: PropTypes.func.isRequired,\n  deleteProduct: PropTypes.func.isRequired,\n}\n\nexport default Products;\n","import _ from 'lodash';\n\nexport const CREATE_PRODUCT = 'CREATE_PRODUCT';\nexport const UPDATE_PRODUCT = 'UPDATE_PRODUCT';\nexport const DELETE_PRODUCT = 'DELETE_PRODUCT';\n\nexport function createProduct() {\n  return {\n    type: CREATE_PRODUCT,\n    payload: {\n      id: _.uniqueId(),\n      name: '',\n      nitrogen: 0.00,\n      phosphorous: 0.00,\n      potassium: 0.00,\n      sulfur: 0.00,\n    }\n  };\n}\n\nexport function deleteProduct(product) {\n  return { type: DELETE_PRODUCT, payload: product };\n}\n\nexport function updateProduct(product) {\n  return { type: UPDATE_PRODUCT, payload: product };\n}\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Products from '../components/Products';\n\nimport {\n  createProduct,\n  updateProduct,\n  deleteProduct,\n} from '../actions/products';\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    createProduct,\n    updateProduct,\n    deleteProduct,\n  }, dispatch);\n}\n\nfunction mapStateToProps(state) {\n  return {\n    products: state.products,\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);\n","import {\n  CREATE_PRODUCT,\n  UPDATE_PRODUCT,\n  DELETE_PRODUCT,\n} from '../actions/products';\n\nconst initialState = [];\n\nexport function getProducts(state) {\n  return state.products;\n}\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case CREATE_PRODUCT:\n      return [\n        ...state,\n        action.payload,\n      ];\n    case UPDATE_PRODUCT: {\n      const index = state.findIndex(p => p.id === action.payload.id);\n      return [\n        ...state.slice(0, index),\n        action.payload,\n        ...state.slice(index + 1),\n      ];\n    }\n    case DELETE_PRODUCT: {\n      const index = state.findIndex(p => p.id === action.payload.id);\n      return [\n        ...state.slice(0, index),\n        ...state.slice(index + 1),\n      ];\n    }\n    default:\n      return state;\n  }\n}\n","import {\n  SET_TOTALS,\n  SET_PRODUCT_TOTAL,\n} from '../actions/totals';\n\nconst initialState = {\n  units: 'lbs',\n  nitrogen: 0.00,\n  phosphorous: 0.00,\n  potassium: 0.00,\n  sulfur: 0.00,\n  products: [],\n}\n\nexport function getTotals(state) {\n  return state.totals;\n}\n\nexport function getProductTotals(state) {\n  return state.totals.products;\n}\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_TOTALS:\n      return {\n        ...state,\n        ...action.payload,\n      }\n    case SET_PRODUCT_TOTAL: {\n      const index = state.products.findIndex(p => p.id === action.payload.id);\n      return {\n        ...state,\n        products: [\n          ...state.products.slice(0, index),\n          action.payload,\n          ...state.products.slice(index + 1),\n        ],\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\n\nimport products from './products';\nimport totals from './totals';\n\nexport default combineReducers({\n  products,\n  totals,\n});\n","import { applyMiddleware, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport rootReducer from '../reducers';\n// import rootSaga from '../sagas';\n\n// const sagaMiddleware = createSagaMiddleware();\n\nconst composeEnhancers = composeWithDevTools({});\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(\n    // sagaMiddleware\n  )),\n);\n\n// sagaMiddleware.run(rootSaga);\n\nexport default store;\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport {\n  Container,\n  Row,\n  Col,\n  Navbar,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  TabContent,\n  TabPane,\n} from 'reactstrap';\n\nimport Blend from './containers/Blend';\nimport Products from './containers/Products';\n\nimport store from './store';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tab: 0,\n    }\n  }\n\n  openProducts = () => {\n    this.setState({ tab: 0 });\n  }\n\n  openResults = () => {\n    this.setState({ tab: 1 });\n  }\n\n  render() {\n    const activeTab = this.state.tab === 0;\n    return (\n      <Provider store={store}>\n        <Navbar color=\"dark\" dark>\n          <NavbarBrand href=\"/\">Blend Calculator</NavbarBrand>\n        </Navbar>\n        <Container className=\"mt-5\">\n          <Nav tabs fill>\n            <NavItem>\n              <NavLink className={activeTab ? 'active' : undefined} onClick={this.openProducts}>\n                Products\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink className={activeTab ? undefined : 'active'} onClick={this.openResults}>\n                Blend\n              </NavLink>\n            </NavItem>\n          </Nav>\n          <TabContent activeTab={this.state.tab} className=\"mt-5\">\n            <TabPane tabId={0}>\n              <Row>\n                <Col>\n                  <Products />\n                </Col>\n              </Row>\n            </TabPane>\n            <TabPane tabId={1}>\n              <Row>\n                <Col>\n                  <Blend />\n                </Col>\n              </Row>\n            </TabPane>\n          </TabContent>\n        </Container>\n      </Provider>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}